// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace WebApi.Migrations
{
    public partial class AddPrototypesPackages : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "PrototypesPackages",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    OutletCode = table.Column<string>(type: "text", nullable: true),
                    OutletTitle = table.Column<string>(type: "text", nullable: true),
                    ProductGroupCode = table.Column<string>(type: "text", nullable: true),
                    ProductGroupTitle = table.Column<string>(type: "text", nullable: true),
                    GateLevelCode = table.Column<string>(type: "text", nullable: true),
                    GateLevelTitle = table.Column<string>(type: "text", nullable: true),
                    EvidenceYearCode = table.Column<string>(type: "text", nullable: true),
                    EvidenceYearTitle = table.Column<int>(type: "integer", nullable: false),
                    LocationCode = table.Column<string>(type: "text", nullable: true),
                    LocationTitle = table.Column<string>(type: "text", nullable: true),
                    PartTypeCode = table.Column<string>(type: "text", nullable: true),
                    PartTypeTitle = table.Column<string>(type: "text", nullable: true),
                    PackageIdentifier = table.Column<string>(type: "text", nullable: true),
                    InitialCount = table.Column<int>(type: "integer", nullable: false),
                    ActualCount = table.Column<int>(type: "integer", nullable: false),
                    Comment = table.Column<string>(type: "text", nullable: true),
                    OwnerId = table.Column<int>(type: "integer", nullable: false),
                    CreatedAt = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: true),
                    CreateById = table.Column<int>(type: "integer", nullable: false),
                    ModifiedAt = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: true),
                    ModifiedById = table.Column<int>(type: "integer", nullable: false),
                    DeletedAt = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: true),
                    DeletedById = table.Column<int>(type: "integer", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PrototypesPackages", x => x.Id);
                    table.ForeignKey(
                        name: "FK_PrototypesPackages_Users_CreateById",
                        column: x => x.CreateById,
                        principalTable: "Users",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_PrototypesPackages_Users_DeletedById",
                        column: x => x.DeletedById,
                        principalTable: "Users",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_PrototypesPackages_Users_ModifiedById",
                        column: x => x.ModifiedById,
                        principalTable: "Users",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_PrototypesPackages_Users_OwnerId",
                        column: x => x.OwnerId,
                        principalTable: "Users",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_PrototypesPackages_CreateById",
                table: "PrototypesPackages",
                column: "CreateById");

            migrationBuilder.CreateIndex(
                name: "IX_PrototypesPackages_DeletedById",
                table: "PrototypesPackages",
                column: "DeletedById");

            migrationBuilder.CreateIndex(
                name: "IX_PrototypesPackages_ModifiedById",
                table: "PrototypesPackages",
                column: "ModifiedById");

            migrationBuilder.CreateIndex(
                name: "IX_PrototypesPackages_OwnerId",
                table: "PrototypesPackages",
                column: "OwnerId");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "PrototypesPackages");
        }
    }
}
